{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.12","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":11310113,"sourceType":"datasetVersion","datasetId":7055438}],"dockerImageVersionId":30918,"isInternetEnabled":True,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","trusted":True,"execution":{"iopub.status.busy":"2025-04-09T02:12:15.826563Z","iopub.execute_input":"2025-04-09T02:12:15.826821Z","iopub.status.idle":"2025-04-09T02:12:16.256200Z","shell.execute_reply.started":"2025-04-09T02:12:15.826796Z","shell.execute_reply":"2025-04-09T02:12:16.255085Z"}},"outputs":[{"name":"stdout","text":"/kaggle/input/produksi-rambutan-sul-sel-2019-2020/cleaned_rambutan_problems_symptoms_solution_id.csv\n/kaggle/input/produksi-rambutan-sul-sel-2019-2020/Rata-rata Konsumsi Perkapita Seminggu Menurut Kelompok Buah-Buahan Per Kabupaten_kota 2024.csv\n/kaggle/input/produksi-rambutan-sul-sel-2019-2020/Produksi Rambutan Provinsi Sulawesi Selatan Menurut Kabupaten_Kota 2019-2020.csv\n/kaggle/input/produksi-rambutan-sul-sel-2019-2020/cleaned_Produksi_Rambutan_Prov_Sul_Sel_2019_2020_en.csv\n/kaggle/input/produksi-rambutan-sul-sel-2019-2020/cleaned_rambutan_problems_symptoms_solution_mak.csv\n/kaggle/input/produksi-rambutan-sul-sel-2019-2020/cleaned_Produksi_Rambutan_Prov_Sul_Sel_2019_2020_mak.csv\n/kaggle/input/produksi-rambutan-sul-sel-2019-2020/cleaned_rambutan_problems_symptoms_solution_en.csv\n/kaggle/input/produksi-rambutan-sul-sel-2019-2020/cleaned_Produksi_Rambutan_Prov_Sul_Sel_2019_2020_id.csv\n/kaggle/input/produksi-rambutan-sul-sel-2019-2020/cleaned_Konsumsi_Rambutan_Perkapita_2024_en.csv\n/kaggle/input/produksi-rambutan-sul-sel-2019-2020/cleaned_Konsumsi_Rambutan_Perkapita_2024_mak.csv\n/kaggle/input/produksi-rambutan-sul-sel-2019-2020/cleaned_Konsumsi_Rambutan_Perkapita_2024_id.csv\n","output_type":"stream"}],"execution_count":1},{"cell_type":"code","source":"!pip install faiss-cpu\n!pip install ipywidgets\n!pip install streamlit","metadata":{"trusted":True,"execution":{"iopub.status.busy":"2025-04-09T02:12:16.257647Z","iopub.execute_input":"2025-04-09T02:12:16.258284Z","iopub.status.idle":"2025-04-09T02:12:29.473699Z","shell.execute_reply.started":"2025-04-09T02:12:16.258210Z","shell.execute_reply":"2025-04-09T02:12:29.472412Z"}},"outputs":[{"name":"stdout","text":"Requirement already satisfied: faiss-cpu in /usr/local/lib/python3.10/dist-packages (1.10.0)\nRequirement already satisfied: numpy<3.0,>=1.25.0 in /usr/local/lib/python3.10/dist-packages (from faiss-cpu) (1.26.4)\nRequirement already satisfied: packaging in /usr/local/lib/python3.10/dist-packages (from faiss-cpu) (24.2)\nRequirement already satisfied: mkl_fft in /usr/local/lib/python3.10/dist-packages (from numpy<3.0,>=1.25.0->faiss-cpu) (1.3.8)\nRequirement already satisfied: mkl_random in /usr/local/lib/python3.10/dist-packages (from numpy<3.0,>=1.25.0->faiss-cpu) (1.2.4)\nRequirement already satisfied: mkl_umath in /usr/local/lib/python3.10/dist-packages (from numpy<3.0,>=1.25.0->faiss-cpu) (0.1.1)\nRequirement already satisfied: mkl in /usr/local/lib/python3.10/dist-packages (from numpy<3.0,>=1.25.0->faiss-cpu) (2025.0.1)\nRequirement already satisfied: tbb4py in /usr/local/lib/python3.10/dist-packages (from numpy<3.0,>=1.25.0->faiss-cpu) (2022.0.0)\nRequirement already satisfied: mkl-service in /usr/local/lib/python3.10/dist-packages (from numpy<3.0,>=1.25.0->faiss-cpu) (2.4.1)\nRequirement already satisfied: intel-openmp>=2024 in /usr/local/lib/python3.10/dist-packages (from mkl->numpy<3.0,>=1.25.0->faiss-cpu) (2024.2.0)\nRequirement already satisfied: tbb==2022.* in /usr/local/lib/python3.10/dist-packages (from mkl->numpy<3.0,>=1.25.0->faiss-cpu) (2022.0.0)\nRequirement already satisfied: tcmlib==1.* in /usr/local/lib/python3.10/dist-packages (from tbb==2022.*->mkl->numpy<3.0,>=1.25.0->faiss-cpu) (1.2.0)\nRequirement already satisfied: intel-cmplr-lib-rt in /usr/local/lib/python3.10/dist-packages (from mkl_umath->numpy<3.0,>=1.25.0->faiss-cpu) (2024.2.0)\nRequirement already satisfied: intel-cmplr-lib-ur==2024.2.0 in /usr/local/lib/python3.10/dist-packages (from intel-openmp>=2024->mkl->numpy<3.0,>=1.25.0->faiss-cpu) (2024.2.0)\nRequirement already satisfied: ipywidgets in /usr/local/lib/python3.10/dist-packages (8.1.5)\nRequirement already satisfied: comm>=0.1.3 in /usr/local/lib/python3.10/dist-packages (from ipywidgets) (0.2.2)\nRequirement already satisfied: ipython>=6.1.0 in /usr/local/lib/python3.10/dist-packages (from ipywidgets) (7.34.0)\nRequirement already satisfied: traitlets>=4.3.1 in /usr/local/lib/python3.10/dist-packages (from ipywidgets) (5.7.1)\nRequirement already satisfied: widgetsnbextension~=4.0.12 in /usr/local/lib/python3.10/dist-packages (from ipywidgets) (4.0.13)\nRequirement already satisfied: jupyterlab-widgets~=3.0.12 in /usr/local/lib/python3.10/dist-packages (from ipywidgets) (3.0.13)\nRequirement already satisfied: setuptools>=18.5 in /usr/local/lib/python3.10/dist-packages (from ipython>=6.1.0->ipywidgets) (75.1.0)\nRequirement already satisfied: jedi>=0.16 in /usr/local/lib/python3.10/dist-packages (from ipython>=6.1.0->ipywidgets) (0.19.2)\nRequirement already satisfied: decorator in /usr/local/lib/python3.10/dist-packages (from ipython>=6.1.0->ipywidgets) (4.4.2)\nRequirement already satisfied: pickleshare in /usr/local/lib/python3.10/dist-packages (from ipython>=6.1.0->ipywidgets) (0.7.5)\nRequirement already satisfied: prompt-toolkit!=3.0.0,!=3.0.1,<3.1.0,>=2.0.0 in /usr/local/lib/python3.10/dist-packages (from ipython>=6.1.0->ipywidgets) (3.0.48)\nRequirement already satisfied: pygments in /usr/local/lib/python3.10/dist-packages (from ipython>=6.1.0->ipywidgets) (2.19.1)\nRequirement already satisfied: backcall in /usr/local/lib/python3.10/dist-packages (from ipython>=6.1.0->ipywidgets) (0.2.0)\nRequirement already satisfied: matplotlib-inline in /usr/local/lib/python3.10/dist-packages (from ipython>=6.1.0->ipywidgets) (0.1.7)\nRequirement already satisfied: pexpect>4.3 in /usr/local/lib/python3.10/dist-packages (from ipython>=6.1.0->ipywidgets) (4.9.0)\nRequirement already satisfied: parso<0.9.0,>=0.8.4 in /usr/local/lib/python3.10/dist-packages (from jedi>=0.16->ipython>=6.1.0->ipywidgets) (0.8.4)\nRequirement already satisfied: ptyprocess>=0.5 in /usr/local/lib/python3.10/dist-packages (from pexpect>4.3->ipython>=6.1.0->ipywidgets) (0.7.0)\nRequirement already satisfied: wcwidth in /usr/local/lib/python3.10/dist-packages (from prompt-toolkit!=3.0.0,!=3.0.1,<3.1.0,>=2.0.0->ipython>=6.1.0->ipywidgets) (0.2.13)\nRequirement already satisfied: streamlit in /usr/local/lib/python3.10/dist-packages (1.44.1)\nRequirement already satisfied: altair<6,>=4.0 in /usr/local/lib/python3.10/dist-packages (from streamlit) (5.5.0)\nRequirement already satisfied: blinker<2,>=1.0.0 in /usr/local/lib/python3.10/dist-packages (from streamlit) (1.9.0)\nRequirement already satisfied: cachetools<6,>=4.0 in /usr/local/lib/python3.10/dist-packages (from streamlit) (5.5.0)\nRequirement already satisfied: click<9,>=7.0 in /usr/local/lib/python3.10/dist-packages (from streamlit) (8.1.7)\nRequirement already satisfied: numpy<3,>=1.23 in /usr/local/lib/python3.10/dist-packages (from streamlit) (1.26.4)\nRequirement already satisfied: packaging<25,>=20 in /usr/local/lib/python3.10/dist-packages (from streamlit) (24.2)\nRequirement already satisfied: pandas<3,>=1.4.0 in /usr/local/lib/python3.10/dist-packages (from streamlit) (2.2.3)\nRequirement already satisfied: pillow<12,>=7.1.0 in /usr/local/lib/python3.10/dist-packages (from streamlit) (11.0.0)\nRequirement already satisfied: protobuf<6,>=3.20 in /usr/local/lib/python3.10/dist-packages (from streamlit) (3.20.3)\nRequirement already satisfied: pyarrow>=7.0 in /usr/local/lib/python3.10/dist-packages (from streamlit) (19.0.1)\nRequirement already satisfied: requests<3,>=2.27 in /usr/local/lib/python3.10/dist-packages (from streamlit) (2.32.3)\nRequirement already satisfied: tenacity<10,>=8.1.0 in /usr/local/lib/python3.10/dist-packages (from streamlit) (9.0.0)\nRequirement already satisfied: toml<2,>=0.10.1 in /usr/local/lib/python3.10/dist-packages (from streamlit) (0.10.2)\nRequirement already satisfied: typing-extensions<5,>=4.4.0 in /usr/local/lib/python3.10/dist-packages (from streamlit) (4.12.2)\nRequirement already satisfied: watchdog<7,>=2.1.5 in /usr/local/lib/python3.10/dist-packages (from streamlit) (6.0.0)\nRequirement already satisfied: gitpython!=3.1.19,<4,>=3.0.7 in /usr/local/lib/python3.10/dist-packages (from streamlit) (3.1.43)\nRequirement already satisfied: pydeck<1,>=0.8.0b4 in /usr/local/lib/python3.10/dist-packages (from streamlit) (0.9.1)\nRequirement already satisfied: tornado<7,>=6.0.3 in /usr/local/lib/python3.10/dist-packages (from streamlit) (6.3.3)\nRequirement already satisfied: jinja2 in /usr/local/lib/python3.10/dist-packages (from altair<6,>=4.0->streamlit) (3.1.4)\nRequirement already satisfied: jsonschema>=3.0 in /usr/local/lib/python3.10/dist-packages (from altair<6,>=4.0->streamlit) (4.23.0)\nRequirement already satisfied: narwhals>=1.14.2 in /usr/local/lib/python3.10/dist-packages (from altair<6,>=4.0->streamlit) (1.18.4)\nRequirement already satisfied: gitdb<5,>=4.0.1 in /usr/local/lib/python3.10/dist-packages (from gitpython!=3.1.19,<4,>=3.0.7->streamlit) (4.0.11)\nRequirement already satisfied: mkl_fft in /usr/local/lib/python3.10/dist-packages (from numpy<3,>=1.23->streamlit) (1.3.8)\nRequirement already satisfied: mkl_random in /usr/local/lib/python3.10/dist-packages (from numpy<3,>=1.23->streamlit) (1.2.4)\nRequirement already satisfied: mkl_umath in /usr/local/lib/python3.10/dist-packages (from numpy<3,>=1.23->streamlit) (0.1.1)\nRequirement already satisfied: mkl in /usr/local/lib/python3.10/dist-packages (from numpy<3,>=1.23->streamlit) (2025.0.1)\nRequirement already satisfied: tbb4py in /usr/local/lib/python3.10/dist-packages (from numpy<3,>=1.23->streamlit) (2022.0.0)\nRequirement already satisfied: mkl-service in /usr/local/lib/python3.10/dist-packages (from numpy<3,>=1.23->streamlit) (2.4.1)\nRequirement already satisfied: python-dateutil>=2.8.2 in /usr/local/lib/python3.10/dist-packages (from pandas<3,>=1.4.0->streamlit) (2.9.0.post0)\nRequirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.10/dist-packages (from pandas<3,>=1.4.0->streamlit) (2025.1)\nRequirement already satisfied: tzdata>=2022.7 in /usr/local/lib/python3.10/dist-packages (from pandas<3,>=1.4.0->streamlit) (2025.1)\nRequirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.10/dist-packages (from requests<3,>=2.27->streamlit) (3.4.1)\nRequirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.10/dist-packages (from requests<3,>=2.27->streamlit) (3.10)\nRequirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.10/dist-packages (from requests<3,>=2.27->streamlit) (2.3.0)\nRequirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.10/dist-packages (from requests<3,>=2.27->streamlit) (2025.1.31)\nRequirement already satisfied: smmap<6,>=3.0.1 in /usr/local/lib/python3.10/dist-packages (from gitdb<5,>=4.0.1->gitpython!=3.1.19,<4,>=3.0.7->streamlit) (5.0.1)\nRequirement already satisfied: MarkupSafe>=2.0 in /usr/local/lib/python3.10/dist-packages (from jinja2->altair<6,>=4.0->streamlit) (3.0.2)\nRequirement already satisfied: attrs>=22.2.0 in /usr/local/lib/python3.10/dist-packages (from jsonschema>=3.0->altair<6,>=4.0->streamlit) (25.1.0)\nRequirement already satisfied: jsonschema-specifications>=2023.03.6 in /usr/local/lib/python3.10/dist-packages (from jsonschema>=3.0->altair<6,>=4.0->streamlit) (2024.10.1)\nRequirement already satisfied: referencing>=0.28.4 in /usr/local/lib/python3.10/dist-packages (from jsonschema>=3.0->altair<6,>=4.0->streamlit) (0.35.1)\nRequirement already satisfied: rpds-py>=0.7.1 in /usr/local/lib/python3.10/dist-packages (from jsonschema>=3.0->altair<6,>=4.0->streamlit) (0.22.3)\nRequirement already satisfied: six>=1.5 in /usr/local/lib/python3.10/dist-packages (from python-dateutil>=2.8.2->pandas<3,>=1.4.0->streamlit) (1.17.0)\nRequirement already satisfied: intel-openmp>=2024 in /usr/local/lib/python3.10/dist-packages (from mkl->numpy<3,>=1.23->streamlit) (2024.2.0)\nRequirement already satisfied: tbb==2022.* in /usr/local/lib/python3.10/dist-packages (from mkl->numpy<3,>=1.23->streamlit) (2022.0.0)\nRequirement already satisfied: tcmlib==1.* in /usr/local/lib/python3.10/dist-packages (from tbb==2022.*->mkl->numpy<3,>=1.23->streamlit) (1.2.0)\nRequirement already satisfied: intel-cmplr-lib-rt in /usr/local/lib/python3.10/dist-packages (from mkl_umath->numpy<3,>=1.23->streamlit) (2024.2.0)\nRequirement already satisfied: intel-cmplr-lib-ur==2024.2.0 in /usr/local/lib/python3.10/dist-packages (from intel-openmp>=2024->mkl->numpy<3,>=1.23->streamlit) (2024.2.0)\n","output_type":"stream"}],"execution_count":2},{"cell_type":"code","source":"import streamlit as st\nimport pandas as pd\nimport plotly.express as px\nimport faiss\nimport numpy as np\nfrom tqdm import tqdm  # For progress tracking\nfrom ipywidgets import interact\nfrom sentence_transformers import SentenceTransformer\n","metadata":{"trusted":True,"execution":{"iopub.status.busy":"2025-04-09T02:12:29.475311Z","iopub.execute_input":"2025-04-09T02:12:29.475756Z","iopub.status.idle":"2025-04-09T02:12:38.990072Z","shell.execute_reply.started":"2025-04-09T02:12:29.475715Z","shell.execute_reply":"2025-04-09T02:12:38.989202Z"}},"outputs":[],"execution_count":3},{"cell_type":"code","source":"# Set the title for the app\nst.title(\"Unified Interactive Notebook\")\n\n# Language selection for flexibility\nlanguage = st.radio(\"Choose Language:\", [\"English\", \"Bahasa\", \"Makassar\"])\n\n# Select which notebook to interact with\nnotebook_choice = st.selectbox(\n    \"Select Notebook:\",\n    [\"Notebook 1 - FAISS NLP Search\", \"Notebook 2 - Dataset 2 Visualization\", \"Notebook 3 - Dataset 3 Visualization\"]\n)\n\n# Define shared utility functions for FAISS and Plotly interaction\ndef load_and_process_dataset(file_path):\n    # Load dataset\n    data = pd.read_csv(file_path, delimiter=\",\")\n    \n    # Fix combined columns (Split if necessary)\n    if len(data.columns) == 1:\n        data[['Region', 'Consumption']] = data.iloc[:, 0].str.split(',', expand=True)\n    \n    # Convert Consumption column to numeric values\n    data[\"Consumption\"] = pd.to_numeric(data[\"Consumption\"], errors='coerce').fillna(0)\n    \n    # Remove duplicates and NaN values\n    data = data.drop_duplicates(subset=[\"Region\", \"Consumption\"]).dropna(subset=[\"Region\", \"Consumption\"])\n    data[\"Region\"] = data[\"Region\"].str.strip()  # Clean whitespace\n    return data\n\ndef setup_faiss(data):\n    # Generate embeddings\n    model = SentenceTransformer('all-MiniLM-L6-v2')\n    batch_size = 32\n    embeddings = []\n\n    # Create embeddings in batches\n    for i in tqdm(range(0, len(data), batch_size), desc=\"Generating Embeddings\"):\n        batch_data = data[\"Region\"].iloc[i:i + batch_size].tolist()\n        batch_embeddings = model.encode(batch_data)\n        embeddings.extend(batch_embeddings)\n\n    embeddings_np = np.array(embeddings)\n\n    # Create FAISS index\n    dimension = embeddings_np.shape[1]\n    index = faiss.IndexFlatL2(dimension)\n    index.add(embeddings_np)\n    \n    return index, data\n\ndef search_faiss(query, top_k, index, data):\n    query_embedding = model.encode([query.strip()])[0]\n    distances, indices = index.search(np.array([query_embedding]), top_k)\n    results = data.iloc[indices[0]]\n    return results[[\"Region\", \"Consumption\"]]\n\n# Conditional display based on notebook selection\nif notebook_choice == \"Notebook 1 - FAISS NLP Search\":\n    st.subheader(\"Search Using FAISS NLP\")\n\n    # Load and process Dataset 1\n    dataset_path = \"/kaggle/input/produksi-rambutan-sul-sel-2019-2020/cleaned_Konsumsi_Rambutan_Perkapita_2024_en.csv\"\n    data1 = load_and_process_dataset(dataset_path)\n    index1, processed_data1 = setup_faiss(data1)\n\n    # Interactive search functionality\n    query = st.text_input(\"Enter search query:\")\n    top_k = st.slider(\"Select number of top results:\", 1, 10, 5)  # Slider for top_k selection\n    if query:\n        results = search_faiss(query, top_k, index1, processed_data1)\n        st.write(results)\n\nelif notebook_choice == \"Notebook 2 - Dataset 2 Visualization\":\n    st.subheader(\"Interactive Chart - Dataset 2\")\n\n    # Load Dataset 2\n    dataset_path2 = \"/kaggle/input/produksi-rambutan-sul-sel-2019-2020/cleaned_Konsumsi_Rambutan_Perkapita_2024_en.csv\"  # Replace with actual path\n    df2 = load_and_process_dataset(dataset_path2)\n\n    # Plot Dataset 2\n    fig2 = px.bar(df2, x=\"Region\", y=\"Consumption\", title=\"Interactive Chart - Dataset 2\", color=\"Consumption\")\n    st.plotly_chart(fig2)\n\nelif notebook_choice == \"Notebook 3 - Dataset 3 Visualization\":\n    st.subheader(\"Interactive Chart - Dataset 3\")\n\n    # Load Dataset 3\n    dataset_path3 = \"/kaggle/input/produksi-rambutan-sul-sel-2019-2020/cleaned_Produksi_Rambutan_Prov_Sul_Sel_2019_2020_en.csv\"  # Replace with actual path\n    df3 = load_and_process_dataset(dataset_path3)\n\n    # Plot Dataset 3\n    fig3 = px.bar(df3, x=\"Region\", y=\"Consumption\", title=\"Interactive Chart - Dataset 3\", color=\"Consumption\")\n    st.plotly_chart(fig3)\n","metadata":{"trusted":True,"execution":{"iopub.status.busy":"2025-04-09T02:12:38.991120Z","iopub.execute_input":"2025-04-09T02:12:38.992047Z","iopub.status.idle":"2025-04-09T02:12:46.963482Z","shell.execute_reply.started":"2025-04-09T02:12:38.991991Z","shell.execute_reply":"2025-04-09T02:12:46.962337Z"}},"outputs":[{"name":"stderr","text":"2025-04-09 02:12:39.000 WARNING streamlit.runtime.scriptrunner_utils.script_run_context: Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n2025-04-09 02:12:39.364 \n  \u001b[33m\u001b[1mWarning:\u001b[0m to view this Streamlit app on a browser, run it with the following\n  command:\n\n    streamlit run /usr/local/lib/python3.10/dist-packages/colab_kernel_launcher.py [ARGUMENTS]\n2025-04-09 02:12:39.365 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n2025-04-09 02:12:39.366 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n2025-04-09 02:12:39.367 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n2025-04-09 02:12:39.369 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n2025-04-09 02:12:39.370 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n2025-04-09 02:12:39.370 Session state does not function when running a script without `streamlit run`\n2025-04-09 02:12:39.371 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n2025-04-09 02:12:39.372 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n2025-04-09 02:12:39.373 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n2025-04-09 02:12:39.374 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n2025-04-09 02:12:39.374 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n2025-04-09 02:12:39.375 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n2025-04-09 02:12:39.376 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n2025-04-09 02:12:39.377 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n2025-04-09 02:12:39.380 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n2025-04-09 02:12:39.380 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"modules.json:   0%|          | 0.00/349 [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"445064fbcadd4d49bb7413c1dd2d98d6"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"config_sentence_transformers.json:   0%|          | 0.00/116 [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"beec848b74954613ae32704949872d63"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"README.md:   0%|          | 0.00/10.5k [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"d5d6915e963f457c843fcaa43d9ce16f"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"sentence_bert_config.json:   0%|          | 0.00/53.0 [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"f70d4d9ad5ea46c4a079b49633910721"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"config.json:   0%|          | 0.00/612 [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"fab0c5da8ce64f5db8a563b8d4694ed0"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"model.safetensors:   0%|          | 0.00/90.9M [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"099e3b94a2ba4e43bc23a4b87ba0b773"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"tokenizer_config.json:   0%|          | 0.00/350 [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"95b7f0972e074a97ac59a5ca17c7219c"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"vocab.txt:   0%|          | 0.00/232k [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"8b0da65f281c488390f59d4dc5759e40"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"tokenizer.json:   0%|          | 0.00/466k [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"a294665a6bf6439c9adaeec46d12bf0d"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"special_tokens_map.json:   0%|          | 0.00/112 [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"827a266cd3834790bf02628cd2627730"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"config.json:   0%|          | 0.00/190 [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"471025b4149748139dfa7835e05df28d"}},"metadata":{}},{"name":"stderr","text":"Generating Embeddings:   0%|          | 0/17 [00:00<?, ?it/s]","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"Batches:   0%|          | 0/1 [00:00<?, ?it/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"4712e6f552d844cf8990e9d00aa93f1c"}},"metadata":{}},{"name":"stderr","text":"Generating Embeddings:   6%|▌         | 1/17 [00:00<00:03,  4.29it/s]","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"Batches:   0%|          | 0/1 [00:00<?, ?it/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"20a9fd59801044218166c54d75cabc5f"}},"metadata":{}},{"name":"stderr","text":"Generating Embeddings:  12%|█▏        | 2/17 [00:00<00:02,  6.25it/s]","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"Batches:   0%|          | 0/1 [00:00<?, ?it/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"d7ca9036ab834d18a53288dee4daaf31"}},"metadata":{}},{"name":"stderr","text":"Generating Embeddings:  18%|█▊        | 3/17 [00:00<00:01,  7.41it/s]","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"Batches:   0%|          | 0/1 [00:00<?, ?it/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"c1de0d65721d4d2b8f7aba96944aa12d"}},"metadata":{}},{"name":"stderr","text":"Generating Embeddings:  24%|██▎       | 4/17 [00:00<00:01,  7.65it/s]","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"Batches:   0%|          | 0/1 [00:00<?, ?it/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"a1113ed5043b45a08a8886da01a039d1"}},"metadata":{}},{"name":"stderr","text":"Generating Embeddings:  29%|██▉       | 5/17 [00:00<00:01,  8.25it/s]","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"Batches:   0%|          | 0/1 [00:00<?, ?it/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"e3d0d9a2dc6445d68439db18fdce613a"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"Batches:   0%|          | 0/1 [00:00<?, ?it/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"7a64dcdcdfc043c0978a81869e78b561"}},"metadata":{}},{"name":"stderr","text":"Generating Embeddings:  41%|████      | 7/17 [00:00<00:01,  9.68it/s]","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"Batches:   0%|          | 0/1 [00:00<?, ?it/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"97c2be50fc8a4d88874104e71153515c"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"Batches:   0%|          | 0/1 [00:00<?, ?it/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"7fdf0563a61e469692b3f0441a0a5cd2"}},"metadata":{}},{"name":"stderr","text":"Generating Embeddings:  53%|█████▎    | 9/17 [00:01<00:00, 10.03it/s]","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"Batches:   0%|          | 0/1 [00:00<?, ?it/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"b286acc92baf4282898a66842117b059"}},"metadata":{}},{"name":"stderr","text":"Generating Embeddings:  59%|█████▉    | 10/17 [00:01<00:00, 10.02it/s]","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"Batches:   0%|          | 0/1 [00:00<?, ?it/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"30873f104d4449eba0219f2e701de37e"}},"metadata":{}},{"name":"stderr","text":"Generating Embeddings:  65%|██████▍   | 11/17 [00:01<00:00, 10.01it/s]","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"Batches:   0%|          | 0/1 [00:00<?, ?it/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"a8452a4af02f4e258eea6ff2a94f391a"}},"metadata":{}},{"name":"stderr","text":"Generating Embeddings:  71%|███████   | 12/17 [00:01<00:00,  9.32it/s]","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"Batches:   0%|          | 0/1 [00:00<?, ?it/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"951027e852c7405294477459f063d5d1"}},"metadata":{}},{"name":"stderr","text":"Generating Embeddings:  76%|███████▋  | 13/17 [00:01<00:00,  9.24it/s]","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"Batches:   0%|          | 0/1 [00:00<?, ?it/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"8c4f49a7579a43bb89ddd501c2a855e1"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"Batches:   0%|          | 0/1 [00:00<?, ?it/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"d9ca6c66b26b4c9591c905d5a2acfb27"}},"metadata":{}},{"name":"stderr","text":"Generating Embeddings:  88%|████████▊ | 15/17 [00:01<00:00,  9.52it/s]","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"Batches:   0%|          | 0/1 [00:00<?, ?it/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"a3e0428d713a4f388100c21cc709adbc"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"Batches:   0%|          | 0/1 [00:00<?, ?it/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"015447be612e41da839746edf5812e0d"}},"metadata":{}},{"name":"stderr","text":"Generating Embeddings: 100%|██████████| 17/17 [00:01<00:00,  9.39it/s]\n2025-04-09 02:12:46.948 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n2025-04-09 02:12:46.949 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n2025-04-09 02:12:46.950 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n2025-04-09 02:12:46.951 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n2025-04-09 02:12:46.952 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n2025-04-09 02:12:46.953 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n2025-04-09 02:12:46.954 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n2025-04-09 02:12:46.954 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n2025-04-09 02:12:46.955 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n2025-04-09 02:12:46.958 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n2025-04-09 02:12:46.958 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n","output_type":"stream"}],"execution_count":4},{"cell_type":"code","source":"# Create a dropdown menu\ndataset_option = widgets.Dropdown(\n    options=[\"Dataset 1\", \"Dataset 2\", \"Dataset 3\"],\n    description=\"Select Dataset:\",\n)\ndisplay(dataset_option)","metadata":{"trusted":True,"execution":{"iopub.status.busy":"2025-04-09T02:09:15.675525Z","iopub.execute_input":"2025-04-09T02:09:15.676175Z","iopub.status.idle":"2025-04-09T02:09:15.997282Z","shell.execute_reply.started":"2025-04-09T02:09:15.676144Z","shell.execute_reply":"2025-04-09T02:09:15.995657Z"}},"outputs":[{"traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-4-047bb7f9f15f>\u001b[0m in \u001b[0;36m<cell line: 2>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;31m# Create a dropdown menu\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m dataset_option = widgets.Dropdown(\n\u001b[0m\u001b[1;32m      3\u001b[0m     \u001b[0moptions\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"Dataset 1\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m\"Dataset 2\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m\"Dataset 3\"\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m     \u001b[0mdescription\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m\"Select Dataset:\"\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m )\n","\u001b[0;31mNameError\u001b[0m: name 'widgets' is not defined"],"ename":"NameError","evalue":"name 'widgets' is not defined","output_type":"error"}],"execution_count":4},{"cell_type":"code","source":"if dataset_option.value == \"Dataset 1\":\n    # Load and process Dataset 1\n    from notebook1 import interaction_function  # Import from Notebook 1\n    interaction_function()\nelif dataset_option.value == \"Dataset 2\":\n    # Load and process Dataset 2\n    from notebook2 import interaction_function\n    interaction_function()\nelif dataset_option.value == \"Dataset 3\":\n    # Load and process Dataset 3\n    from notebook3 import interaction_function\n    interaction_function()","metadata":{"trusted":True},"outputs":[],"execution_count":null},{"cell_type":"code","source":"# Load datasets\ndf1 = pd.read_csv(\"dataset1.csv\")\ndf2 = pd.read_csv(\"/kaggle/input/produksi-rambutan-sul-sel-2019-2020/cleaned_Konsumsi_Rambutan_Perkapita_2024_en.csv\")\ndf3 = pd.read_csv(\"dataset3.csv\")\n\n# UI Components\nst.title(\"Unified Interactive Notebook\")\n\n# Language selection\nlanguage = st.radio(\"Choose Language:\", [\"English\", \"Bahasa\", \"Makassar\"])\n\n# Select which notebook to interact with\nnotebook_choice = st.selectbox(\"Select Notebook:\", [\"Notebook 1 - RAG NLP\", \"Notebook 2 - Dataset 2 Visualization\", \"Notebook 3 - Dataset 3 Visualization\"])\n\n# Conditional display based on selection\nif notebook_choice == \"Notebook 1 - RAG NLP\":\n    st.subheader(\"Search Using FAISS NLP\")\n    query = st.text_input(\"Enter search query:\")\n    if query:\n        results = search_faiss(query)  # Assuming you've defined the FAISS search function\n        st.write(results)\n\nelif notebook_choice == \"Notebook 2 - Dataset 2 Visualization\":\n    fig2 = px.bar(df2, x=\"Region\", y=\"Value\", title=\"Interactive Chart - Dataset 2\")\n    st.plotly_chart(fig2)\n\nelif notebook_choice == \"Notebook 3 - Dataset 3 Visualization\":\n    fig3 = px.bar(df3, x=\"Region\", y=\"Value\", title=\"Interactive Chart - Dataset 3\")\n    st.plotly_chart(fig3)\n","metadata":{"trusted":True},"outputs":[],"execution_count":null}]}